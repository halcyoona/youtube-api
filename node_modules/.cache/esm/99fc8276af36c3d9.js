let CanvasJS;_af3‍.w("canvasjs",[["default",["CanvasJS"],function(v){CanvasJS=v}]]);const request = require('request');

const youtubeService = require('../../business/service/youtube');
const e = require('express');
const axios = require('axios');
// var CanvasJS = require('canvasjs');

var Chart = require('chart.js');


(function () {

    let _handleError = (req, res, err) => {
        let objResp = {
            message: 'Oops! Something went wrong at our end. Please try again later.',
            statusCode: 500,
            errorCode: 0
        };

        if (res) {
            return res.status(objResp.statusCode).json(objResp);
        }
    };

    this.getVideoAnalytics = function (req, res) {
        // var initializePromise = youtubeService.newVideoAnalytics('http://54.246.43.67/start');
        // initializePromise.then(function(context) { 
        //     // console.log(context);
        //     let commentData = context.comments.Comments;
        //     console.log(commentData[1]);
        //     let info = context.info;
        //     // console.log(commentData); 
        //     var views = info.viewCount
        //     var likes = info.likeCount
        //     var dislikes = info.dislikeCount
        //     var comments = info.commentCount
        //     views = views.toLocaleString() ;
        //     likes = likes.toLocaleString() ;
        //     dislikes = dislikes.toLocaleString() ;
        //     comments = comments.toLocaleString() ;
        //     info.likeCount = likes;
        //     info.dislikeCount = dislikes;
        //     info.commentCount = comments;
        //     info.viewCount = views;
        //     context.info = info;
        //     var chart = new CanvasJS.Chart("chartContainer", {
        //         theme: "transparent",
        //         exportFileName: "Doughnut Chart",
                
            
        //         data: [{
        //             type: "doughnut",
        //             innerRadius: 90,
        //             text: "Hello",
                    
        //             dataPoints: [
        //                 { y: 450, color:"#C0C0C0" },
        //                 { y: 120, color:"green" },
        //             ]
        //         }]
        //     });
        //     chart.render();
        //     res.render('youtube/youtube', {context:context});
        // });
        var myDoughnutChart = new Chart(ctx, {
            type: 'doughnut',
            data: data,
            options: options
        });
        res.render(myDoughnutChart);
        res.render('youtube/youtube', {context:context});

            // console.log(context);
            // res.render('youtube/youtube', {context:context});
        // }
        // var context; 
        // console.log(response);
        // res.render('youtube/youtube', {context:context});
    };


    var response = function (res, statusCode, returnData, message) {
        return res.status(statusCode).send({
            data: returnData,
            message: message ? message : ""
        });
    };

}).apply(module.exports);